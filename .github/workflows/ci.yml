name: Continuous Integration
on:
  push:
  pull_request:
jobs:
  supported-versions-matrix:
    name: Supported Versions Matrix
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.supported-versions-matrix.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - id: supported-versions-matrix
        uses: WyriHaximus/github-action-composer-php-versions-in-range@v1
  generate-checks-strategy:
    name: Generate Checks
    runs-on: ubuntu-latest
    outputs:
      check: ${{ steps.generate-checks-strategy.outputs.check }}
    steps:
      - uses: actions/checkout@v1
      - id: generate-checks-strategy
        name: Generate check
        run: |
          printf "Checks found: %s\r\n" $(make task-list-ci)
          printf "::set-output name=check::%s" $(make task-list-ci)
  lint:
   runs-on: ubuntu-latest
   steps:
     - name: Lint Code Base
       uses: docker://github/super-linter:v2.2.0
  composer-install:
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        composer: [lowest, current, highest]
    needs:
      - lint
      - supported-versions-matrix
    runs-on: ubuntu-latest
    container:
      image: wyrihaximusnet/php:${{ matrix.php }}-nts-buster-dev-root
    steps:
      - uses: actions/checkout@v2
      - name: Cache composer packages
        uses: actions/cache@v1
        with:
          path: ./vendor/
          key: ${{ matrix.composer }}-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
      - name: Install Dependencies
        run: composer update --prefer-lowest --no-progress --ansi --no-interaction --prefer-dist -o
        if: matrix.composer == 'lowest'
      - name: Install Dependencies
        run: composer install --ansi --no-progress --no-interaction --prefer-dist -o
        if: matrix.composer == 'current'
      - name: Install Dependencies
        run: composer update --ansi --no-progress --no-interaction --prefer-dist -o
        if: matrix.composer == 'highest'
  qa:
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        composer: [lowest, current, highest]
        check: ${{ fromJson(needs.generate-checks-strategy.outputs.check) }}
    needs:
      - composer-install
      - generate-checks-strategy
      - supported-versions-matrix
    runs-on: ubuntu-latest
    container:
      image: wyrihaximusnet/php:${{ matrix.php }}-nts-buster-dev-root
    steps:
      - uses: actions/checkout@v1
      - name: Cache composer packages
        uses: actions/cache@v2
        with:
          path: ./vendor/
          key: ${{ matrix.composer }}-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
      - name: Install Dependencies
        run: (test -f vendor && true ) || composer update --prefer-lowest --no-progress --ansi --no-interaction --prefer-dist -o
        if: matrix.composer == 'lowest'
      - name: Install Dependencies
        run: (test -f vendor && true ) || composer install --ansi --no-progress --no-interaction --prefer-dist -o
        if: matrix.composer == 'current'
      - name: Install Dependencies
        run: (test -f vendor && true ) || composer update --ansi --no-progress --no-interaction --prefer-dist -o
        if: matrix.composer == 'highest'
      - name: Fetch Tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* || true
        if: matrix.check == 'backward-compatibility-check'
      - run: make ${{ matrix.check }}
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_RUN_LOCALLY: ${{ secrets.COVERALLS_RUN_LOCALLY }}
